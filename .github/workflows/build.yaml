name: Build

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:
  merge_group:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Write key
        if: ${{ ( github.event_name != 'pull_request' && github.ref == 'refs/heads/master' ) || github.ref_type == 'tag' }}
        run: |
          if [ ! -z "${{ secrets.KEY_STORE }}" ]; then
            echo storePassword='${{ secrets.KEY_STORE_PASSWORD }}' >> keystore.properties
            echo keyAlias='${{ secrets.ALIAS }}' >> keystore.properties
            echo keyPassword='${{ secrets.KEY_PASSWORD }}' >> keystore.properties
            echo storeFile=$PWD/'key.jks' >> keystore.properties
            echo '${{ secrets.KEY_STORE }}' | base64 --decode > key.jks
          fi

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: |
          ./gradlew assembleRelease

      - name: Upload release
        uses: actions/upload-artifact@v4
        with:
          name: "MyInjector"
          path: "./app/build/outputs/apk/release/*.apk"
          compression-level: 9

      - name: Upload mappings
        uses: actions/upload-artifact@v4
        with:
          name: "MyInjector-mapping"
          path: "./app/build/outputs/mapping/release"
          compression-level: 9

      - name: Post to channel
        if: github.ref == 'refs/heads/master'
        env:
          CHAT_ID: ${{ secrets.TELEGRAM_TO }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          MESSAGE_THREAD_ID: ${{ vars.MESSAGE_THREAD_ID }}
          GITHUB_EVENT: ${{ toJson(github.event) }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          TITLE: MyInjector
        run: |
          if [ -z "$CHAT_ID" ] || [ -z "$BOT_TOKEN" ]; then
            exit 0
          fi
          
          FILE=app/build/outputs/apk/release/MyInjector-*.apk
          FILE=$(echo $FILE)
          NAME=${FILE%.apk}
          MAPPING=$(basename $NAME.mapping.zip)
          zip -9 -r -j $MAPPING ./app/build/outputs/mapping/release
          pip3 install telethon
          python3 $GITHUB_WORKSPACE/scripts/upload.py $FILE $MAPPING
